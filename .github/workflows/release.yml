
name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin, darwin, windows]
        arch: [amd64, amd64, arm64, amd64]
        extension: ['', '', '', '.exe']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o dist/app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ github.ref_name contains '-' }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_name: app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_content_type: application/octet-stream

name: Release
name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin, darwin, windows]
        arch: [amd64, amd64, arm64, amd64]
        extension: ['', '', '', '.exe']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o dist/app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ github.ref_name contains '-' }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_name: app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_content_type: application/octet-stream


on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin, darwin, windows]
        arch: [amd64, amd64, arm64, amd64]
        extension: ['', '', '', '.exe']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o dist/app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ github.ref_name contains '-' }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_name: app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_content_type: application/octet-stream

name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin, darwin, windows]
        arch: [amd64, amd64, arm64, amd64]
        extension: ['', '', '', '.exe']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o dist/app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ github.ref_name contains '-' }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_name: app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_content_type: application/octet-stream

